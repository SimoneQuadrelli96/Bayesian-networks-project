barplot(prop.table(table(data$sex)), main="Sex distribution",  names.arg=c("Female", "Male"))
barplot(prop.table(table(data$cp)), main="Chest pain distribution",  names.arg=c("No", "Yes"))
barplot(prop.table(table(data$fbs)), main="Fasting blood sugar > 120 mg/dl distribution",  names.arg=c("No", "Yes"))
barplot(prop.table(table(data$restecg)), main="Resting electrocardiographic",  names.arg=c("normal", "ST-T ab.","hypertrophy"))
barplot(prop.table(table(data$exang)), main="Exercise induced angina distribution",  names.arg=c("No", "Yes"))
barplot(prop.table(table(data$slope)), main="Slope of the peak",  names.arg=c("upsloping", "flat","downsloping"))
barplot(prop.table(table(data$ca)), main="Major vessels colored")
barplot(prop.table(table(data$thal)), main="Thal distribution")
barplot(prop.table(table(data$hyperchol)), main="Hypercholestrol distribution",  names.arg=c("No", "Yes"))
barplot(prop.table(table(data$class_age)), main="Age class distribution", names.arg=c("< 45", ">= 45 & <= 65", "> 65") )
barplot(prop.table(table(data$hyperchol)), main="Hypercholestrol distribution",  names.arg=c("No", "Yes"))
barplot(prop.table(table(data$ca)), main="Major vessels colored")
barplot
barplot(prop.table(table(data$hyperchol)), main="Hypercholestrol distribution",  names.arg=c("No", "Yes"))
barplot(prop.table(table(data$ca)), main="Major vessels colored")
barplot(prop.table(table(data$slope)), main="Slope of the peak",  names.arg=c("upsloping", "flat","downsloping"))
barplot(prop.table(table(data$exang)), main="Exercise induced angina",  names.arg=c("No", "Yes"))
barplot(prop.table(table(data$restecg)), main="Resting electrocardiographic",  names.arg=c("normal", "ST-T ab.","hypertrophy"))
library("Rgraphviz")
library("igraph")
library(gRbase)
library(gRim)
library(bnlearn)
library(DAAG)
library(lattice)
# Read the dataset
setwd("C:/Users/simon/Desktop/Graphical Model/probabilistic_modelling")
data <- read.csv(file = 'heart.csv')
data <- data[c(14,1,2,3,4,5,6,7,8,9,10,11,12,13)]
data$target <- factor(data$target)
data$sex <- factor(data$sex)
data$cp[data$cp>= 1] <- 1
data$cp[data$cp < 1]  <- 0
data$cp <- factor(data$cp)
data$fbs <- factor(data$fbs)
data$restecg <- factor(data$restecg)
data$exang <- factor(data$exang)
data$slope <- factor(data$slope)
data$ca <- factor(data$ca)
data$hyperchol <- data$chol
data$hyperchol[data$hyperchol<= 240 ]  <- 0
data$hyperchol[data$hyperchol> 240]  <- 1
data$hyperchol <- factor(data$hyperchol)
data$thal <- factor(data$thal)
data$class_age <- data$age
data$class_age[data$class_age<45] <- 1
data$class_age[ data$class_age>=45 & data$class_age<=65] <- 2
data$class_age[data$class_age>65] <- 3
data$age <- as.double(data$age)
data$trestbps <- as.double(data$trestbps)
data$chol <- as.double(data$chol)
data$thalach <- as.double(data$thalach)
data$oldpeak <- as.double(data$oldpeak)
head(data)
# create table
data_table <- as.table(ftable(data[c(1,3,4,7,8,10,12,13,14,15,16)]))
m_sat <- dmod(~.^.,data=data_table)
m_sat
m1 <- stepwise(m_sat)
m1
m2 <- stepwise(m_sat,k=log(sum(data_table)))
m2
# start from the null model
m3  <- stepwise(dmod(~.^1,data=data_table) ,k=log(sum(data_table)),direction="forward",details=1)
m3
summary(m3)
attributes(m3)
x11()
par(mfrow=c(2,2))
plot(as(m_sat,"igraph"),main="Initial model backward")
plot(as(m3,"igraph"),main="Initial model forward")
plot(as(m1,"igraph"), main="AIC")
plot(as(m2,"igraph"), main="BIC")
x11()
par(mfrow=c(2,2))
plot(as(m_sat,"igraph"),main="Initial model backward")
plot(as(m3,"igraph"),main="Initial model forward")
plot(as(m1,"igraph"), main="AIC")
plot(as(m2,"igraph"), main="BIC")
summary(m3)
summary(m3)
summary(m2)
cliques(m3)
cliques(igraph(m3))
cliques(as(m3, Ã­graph))
cliques(as(m3,"igraph"))
summary(m3)
cliques(as(m3,"igraph"))
m3
summary(m3)
summary(m2)
m3
m3
summary(m3)
m2
summary(m2)
m3
m3
attributes(m3)
m3$dmodel
m3$datainfo
m3$fitinfo
attributes(m3)
m3$call
m3$isFitted
attributes(m3)
m3$glistNUM
m3
summary(m3)
as(m3, "matrix")
as(m_sat, "graphNEL")
as(m_sat, "graphNEL")
as(m_sat, "graphNEL")
igraph.to.graphNEL(m_sat)
igraph.to.graphNEL(as(m_sat,"igraph"))
igraph.to.graphNEL(as(m1,"igraph"))
igraph.to.graphNEL(as(m2,"igraph"))
igraph.to.graphNEL(as(m3,"igraph"))
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, score = "bic-cg")
bn.mod <- bn.fit(structure, data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
bn_data = data[c(1,2,3,4,5,6,7,8,9,10,11,12,13,14)]
structure <- hc(bn_data, score = "bic-cg")
bn.mod <- bn.fit(structure, data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,1,12,13,14)]
structure <- hc(bn_data, score = "bic-cg")
bn.mod <- bn.fit(structure, data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, score = "bic-cg")
bn.mod <- bn.fit(structure, data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, score = "bic-cg")
bn.mod <- bn.fit(structure, data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, score = "bic-cg")
bn.mod <- bn.fit(structure, data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14)]
structure <- hc(bn_data, score = "bic-cg")
bn.mod <- bn.fit(structure, data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, score = "bic-cg")
bn.mod <- bn.fit(structure, data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
bn.cv(bn_data, bn = "hc", algorithm.args = list(score = "bic"))
bn.cv(bn_data, bn = "hc", algorithm.args = list(score = "bic-cg"))
a <-bn.cv(bn_data, bn = "hc", algorithm.args = list(score = "bic-cg"))
a
attibutes(a)
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, score = "bic-cg")
bn.mod <- bn.fit(structure, data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
structure
data("carcass")
head(carcass)
summary(carcass)
bn.init =empty.graph(nodes=names(carcass))
for(i in 1:6)carcass[,i] <- as.numeric(carcass[,i])
bn.hc <- hc(carcass,bn.init,restar=10,perturb=4)
x11()
plot(bn.hc)
ff    <- fitDag(amat(bn.hc),S.carc,nrow(carcass))
ff
fitDag(amat(bn.hc),S.carc,nrow(carcass))
data("carcass")
head(carcass)
summary(carcass)
bn.init =empty.graph(nodes=names(carcass))
for(i in 1:6)carcass[,i] <- as.numeric(carcass[,i])
bn.hc <- hc(carcass,bn.init,restar=10,perturb=4)
x11()
plot(bn.hc)
bn.hc
bn.init =empty.graph(nodes=names(bn_data))
for(i in 1:14)bn_data[,i] <- as.numeric(bn_data[,i])
bn.hc <- hc(bn_data,bn.init,restar=10,perturb=4)
x11()
plot(bn.hc)
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, restart = 10, perturb=2, score = "bic-cg")
structure
bn.mod <- bn.fit(structure, data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, restart = 1000, perturb=5, score = "bic-cg")
structure
bn.mod <- bn.fit(structure, data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
graphviz.plot(structure, layout = "dot")
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, restart = 1000, perturb=5, score = "bic-cg")
structure
bn.mod <- bn.fit(structure, method = "bayes", iss = 1,data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
graphviz.plot(structure, layout = "dot")
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, restart = 1000, perturb=2, score = "bic-cg")
structure
bn.mod <- bn.fit(structure, method = "bayes", iss = 1,data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
x11()
graphviz.plot(structure, layout = "dot")
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, restart = 1000,score = "bic-cg")
structure
bn.mod <- bn.fit(structure, iss = 1,data = bn_data)
x11()
graphviz.plot(structure, layout = "dot")
cad.bn <- hc(cad1)
plot(as(amat(structure), "graphNEL"))
#cad.bn <- hc(cad1)
plot(as(amat(structure), "graphNEL"))
x11()
plot(as(amat(structure), "graphNEL"))
bn_data = data[c(1,2,3,4,5,6,7,8,9,10,11,12,13,14)]
structure <- hc(bn_data, restart = 1000,score = "bic-cg")
structure
bn.mod <- bn.fit(structure, iss = 1,data = bn_data)
#cad.bn <- hc(cad1)
x11()
plot(as(amat(structure), "graphNEL"))
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
structure <- hc(bn_data, restart = 20,score = "bic-cg")
structure
bn.mod <- bn.fit(structure, iss = 1,data = bn_data)
#cad.bn <- hc(cad1)
x11()
plot(as(amat(structure), "graphNEL"))
data <- read.csv(file = 'heart.csv')
head(data)
block <- c(1,3,3,4,4,4,4,1,2,1,1,1,3,2)
blM <- matrix(0, nrow=14, ncol=14)
rownames(blM) <- colnames(blM) <- names(cad1)
for (b in 2:4) blM[block==b, block<b] <- 1
library(igraph) > blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
cad.bn1 <- hc(cad1, blacklist=blackL)
plot(as(amat(cad.bn1), "graphNEL"))
library(Rgraphviz)
library(igraph)
library(gRbase)
library(gRim)
library(bnlearn)
library(DAAG)
library(lattice)
block <- c(1,3,3,4,4,4,4,1,2,1,1,1,3,2)
blM <- matrix(0, nrow=14, ncol=14)
rownames(blM) <- colnames(blM) <- names(cad1)
for (b in 2:4) blM[block==b, block<b] <- 1
library(igraph) > blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
cad.bn1 <- hc(cad1, blacklist=blackL)
library(ggm)
library(gRbase)
data(cad1, package='gRbase')
library(bnlearn)
cad.bn <- hc(cad1)
plot(as(amat(cad.bn), "graphNEL"))
block <- c(1,3,3,4,4,4,4,1,2,1,1,1,3,2)
blM <- matrix(0, nrow=14, ncol=14)
rownames(blM) <- colnames(blM) <- names(cad1)
for (b in 2:4) blM[block==b, block<b] <- 1
library(igraph) > blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
library(igraph)
blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
cad.bn1 <- hc(cad1, blacklist=blackL)
plot(as(amat(cad.bn1), "graphNEL"))
blM
block <- c(1,3,3,4,4,4,4,1,2,1,1,1,3,2)
names(cad1)
setwd("C:/Users/simon/Desktop/Graphical Model/probabilistic_modelling")
data <- read.csv(file = 'heart.csv')
data <- data[c(14,1,2,3,4,5,6,7,8,9,10,11,12,13)]
data$target <- factor(data$target)
data$sex <- factor(data$sex)
data$cp[data$cp>= 1] <- 1
data$cp[data$cp < 1]  <- 0
data$cp <- factor(data$cp)
data$fbs <- factor(data$fbs)
data$restecg <- factor(data$restecg)
data$exang <- factor(data$exang)
data$slope <- factor(data$slope)
data$ca <- factor(data$ca)
data$hyperchol <- data$chol
data$hyperchol[data$hyperchol<= 240 ]  <- 0
data$hyperchol[data$hyperchol> 240]  <- 1
data$hyperchol <- factor(data$hyperchol)
data$thal <- factor(data$thal)
data$class_age <- data$age
data$class_age[data$class_age<45] <- 1
data$class_age[ data$class_age>=45 & data$class_age<=65] <- 2
data$class_age[data$class_age>65] <- 3
data$age <- as.double(data$age)
data$trestbps <- as.double(data$trestbps)
data$chol <- as.double(data$chol)
data$thalach <- as.double(data$thalach)
data$oldpeak <- as.double(data$oldpeak)
head(data)
block <- c(1,3,3,4,4,4,4,1,2,1,1,1,3,2)
blM <- matrix(0, nrow=14, ncol=14)
names(data)
block <- c(1,3,3,4,4,4,4,1,2,1,1,1,3,2)
blM <- matrix(0, nrow=14, ncol=14)
names(cad1)
names(cad1)
block
names(data)
bn_data = data[c(2,3,4,5,6,7,8,9,10,11,12,13,14,1)]
bn_data = data[c(1,2,3,4,5,6,7,8,9,10,11,12,13,14)]
names(bn_data)
block - c(2,1,1,3,4,1,1,4,4,3,4,4,4,4)
length(block)
block <- c(2,1,1,3,4,1,1,4,4,3,4,4,4,4)
length(block)
#block <- c(1,3,3,4,4,4,4,1,2,1,1,1,3,2)
blM <- matrix(0, nrow=14, ncol=14)
for (b in 2:4) blM[block==b, block<b] <- 1
library(igraph)
blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
cad.bn1 <- hc(bn_data, blacklist=blackL)
rownames(blM) <- colnames(blM) <- names(bn_data)
for (b in 2:4) blM[block==b, block<b] <- 1
blM
library(igraph)
blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
cad.bn1 <- hc(bn_data, blacklist=blackL)
plot(as(amat(cad.bn1), "graphNEL"))
x11()
plot(as(amat(cad.bn1), "graphNEL"))
library(ggm)
x11()
plot(as(essentialGraph(amat(cad.bn1)), "graphNEL"))
block <- c(1,3,3,4,4,4,4,1,2,1,1,1,3,2)
block
block <- c(1,3,3,4,4,4,4,1,2,1,1,1,3,2)
block <- c(1,3,3,4,4,4,4,1,2,1,1,1,3,2)
block
names(cad1)
c(2,1,1,3,4,1,1,4,4,3,4,4,4,4)
names(bn_data)
blM <- matrix(0, nrow=14, ncol=14)
rownames(blM) <- colnames(blM) <- names(bn_data)
for (b in 2:4) blM[block==b, block<b] <- 1
library(igraph)
blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
cad.bn1 <- hc(bn_data, blacklist=blackL)
x11()
plot(as(amat(cad.bn1), "graphNEL"))
block <- c(2,1,1,3,4,1,1,1,1,3,4,4,4,1)
blM <- matrix(0, nrow=14, ncol=14)
rownames(blM) <- colnames(blM) <- names(bn_data)
for (b in 2:4) blM[block==b, block<b] <- 1
library(igraph)
blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
cad.bn1 <- hc(bn_data, blacklist=blackL)
x11()
plot(as(amat(cad.bn1), "graphNEL"))
names(bn_data)
names(bn_data)
block <- c(2,1,1,3,4,1,1,4,4,3,4,4,4,1)
blM <- matrix(0, nrow=14, ncol=14)
rownames(blM) <- colnames(blM) <- names(bn_data)
for (b in 2:4) blM[block==b, block<b] <- 1
library(igraph)
blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
cad.bn1 <- hc(bn_data, blacklist=blackL)
x11()
plot(as(amat(cad.bn1), "graphNEL"))
names(bn_data)
block <- c(2,1,1,3,4,1,1,1,1,3,4,4,4,1)
blM <- matrix(0, nrow=14, ncol=14)
rownames(blM) <- colnames(blM) <- names(bn_data)
for (b in 2:4) blM[block==b, block<b] <- 1
library(igraph)
blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
cad.bn1 <- hc(bn_data, blacklist=blackL)
x11()
plot(as(amat(cad.bn1), "graphNEL"))
bn_data = data[c(1,2,3,4,5,6,7,8,9,10,11,12,13,14)]
data
names(data)
bn_data = data[c(1,2,3,4,5,7,8,9,10,11,12,13,14,15)]
names(bn_data)
bn_data = data[c(1,2,3,4,5,15,7,8,9,10,11,12,13,14)]
names(bn_data)
block <- c(2,1,1,3,4,1,1,1,1,3,4,4,4,1)
#block <- c(1,3,3,4,4,4,4,1,2,1,1,1,3,2)
blM <- matrix(0, nrow=14, ncol=14)
rownames(blM) <- colnames(blM) <- names(bn_data)
for (b in 2:4) blM[block==b, block<b] <- 1
library(igraph)
blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
cad.bn1 <- hc(bn_data, blacklist=blackL)
x11()
plot(as(amat(cad.bn1), "graphNEL"))
names(data)
names(data)
bn_data = data[c(1,16,3,4,5,15,7,8,9,10,11,12,13,14)]
structure <- hc(bn_data, restart = 20,score = "bic-cg")
x11()
plot(as(amat(structure), "graphNEL"))
names(bn_data)
block <- c(2,1,1,3,4,1,1,1,1,3,4,4,4,1)
blM <- matrix(0, nrow=14, ncol=14)
rownames(blM) <- colnames(blM) <- names(bn_data)
for (b in 2:4) blM[block==b, block<b] <- 1
library(igraph)
blackL <- data.frame(get.edgelist(as(blM, "igraph")))
names(blackL) <- c("from", "to")
cad.bn1 <- hc(bn_data, blacklist=blackL)
x11()
plot(as(amat(cad.bn1), "graphNEL"))
bn_data = data[c(1,2,3,4,5,15,7,8,9,10,11,12,13,14)]
classes <- c(2,1,1,3,4,1,1,1,1,3,4,4,4,1)
FrobiddenArcs <- matrix(0, nrow=length(bn_data), ncol=length(bn_data))
rownames(FrobiddenArcs)  <- names(bn_data)
colnames(FrobiddenArcs) <- names(bn_data)
for (b in 2:4){}
FrobiddenArcs[classes==b, classes<b] <- 1
}
for (b in 2:4){
FrobiddenArcs[classes==b, classes<b] <- 1
}
bn_data = data[c(1,2,3,4,5,15,7,8,9,10,11,12,13,14)]
classes <- c(2,1,1,3,4,1,1,1,1,3,4,4,4,1)
FrobiddenArcs <- matrix(0, nrow=length(bn_data), ncol=length(bn_data))
rownames(FrobiddenArcs)  <- names(bn_data)
colnames(FrobiddenArcs) <- names(bn_data)
for (b in 2:4){
FrobiddenArcs[classes==b, classes<b] <- 1
}
forbiddenList <- data.frame(get.edgelist(as(library(igraph) , "igraph")))
names(forbiddenList) <- c("from", "to")
bn <- hc(bn_data, blacklist=forbiddenList)
x11()
plot(as(amat(bn), "graphNEL"))
bn_data = data[c(1,2,3,4,5,15,7,8,9,10,11,12,13,14)]
classes <- c(2,1,1,3,4,1,1,1,1,3,4,4,4,1)
FrobiddenArcs <- matrix(0, nrow=length(bn_data), ncol=length(bn_data))
rownames(FrobiddenArcs)  <- names(bn_data)
colnames(FrobiddenArcs) <- names(bn_data)
for (b in 2:4){
FrobiddenArcs[classes==b, classes<b] <- 1
}
forbiddenList <- data.frame(get.edgelist(as(library(igraph) , "igraph")))
names(forbiddenList) <- c("from", "to")
model <- hc(bn_data, blacklist=forbiddenList)
x11()
plot(as(amat(model), "graphNEL"))
bn_data = data[c(1,2,3,4,5,15,7,8,9,10,11,12,13,14)]
classes <- c(2,1,1,3,4,1,1,1,1,3,4,4,4,1)
FrobiddenArcs <- matrix(0, nrow=length(bn_data), ncol=length(bn_data))
rownames(FrobiddenArcs)  <- names(bn_data)
colnames(FrobiddenArcs) <- names(bn_data)
for (b in 2:4){
FrobiddenArcs[classes==b, classes<b] <- 1
}
blackL <- data.frame(get.edgelist(as(FrobiddenArcs, "igraph")))
names(ForbiddenList) <- c("from", "to")
ForbiddenList <- data.frame(get.edgelist(as(FrobiddenArcs, "igraph")))
names(ForbiddenList) <- c("from", "to")
bn_model <- hc(bn_data, blacklist=ForbiddenList)
ForbiddenList <- data.frame(get.edgelist(as(FrobiddenArcs, "igraph")))
names(ForbiddenList) <- c("from", "to")
bn_model <- hc(bn_data, blacklist=ForbiddenList)
x11()
plot(as(amat(bn_model), "graphNEL"))
library(ggm)
x11()
plot(as(essentialGraph(amat(cad.bn1)), "graphNEL"))
bn_data = data[c(1,2,3,4,5,15,7,8,9,10,11,12,13,14)]
classes <- c(2,1,1,3,4,1,1,1,1,3,4,4,4,1)
FrobiddenArcs <- matrix(0, nrow=length(bn_data), ncol=length(bn_data))
rownames(FrobiddenArcs)  <- names(bn_data)
colnames(FrobiddenArcs) <- names(bn_data)
for (b in 2:4){
FrobiddenArcs[classes==b, classes<b] <- 1
}
ForbiddenList <- data.frame(get.edgelist(as(FrobiddenArcs, "igraph")))
names(ForbiddenList) <- c("from", "to")
bn_model <- hc(bn_data, blacklist=ForbiddenList)
x11()
plot(as(amat(bn_model), "graphNEL"))
